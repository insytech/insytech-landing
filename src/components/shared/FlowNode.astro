---
export interface Props {
    icon: string;
    label: string;
    id?: string;
    size?: "normal" | "small";
    className?: string;
    animateType?: string;
    animateDelay?: string;
}

const {
    icon,
    label,
    id,
    size = "normal",
    className = "",
    animateType = "scale",
    animateDelay = "0.3s",
} = Astro.props;

const sizeClass = size === "small" ? "small-node" : "";
const classes = `flow-node ${sizeClass} ${className}`.trim();
---

<div
    id={id}
    class={classes}
    data-animate={animateType}
    data-animate-delay={animateDelay}
>
    <div class="node-icon">{icon}</div>
    <span class="node-label">{label}</span>
</div>

<style>
    .flow-node {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
        padding: 1.2rem 1rem;
        background: rgba(15, 23, 42, 0.85);
        border: 1px solid rgba(99, 102, 241, 0.3);
        border-radius: 16px;
        backdrop-filter: blur(12px);
        min-width: 85px;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        box-shadow:
            0 4px 12px rgba(0, 0, 0, 0.2),
            0 0 0 1px rgba(255, 255, 255, 0.05) inset,
            0 0 20px rgba(99, 102, 241, 0.15);
    }

    .flow-node::before {
        content: "";
        position: absolute;
        inset: 0;
        background: radial-gradient(
            circle at 50% 0%,
            rgba(99, 102, 241, 0.2),
            transparent 70%
        );
        opacity: 0.3;
        z-index: 0;
        transition: opacity 0.4s ease;
    }

    .flow-node::after {
        content: "";
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(
            90deg,
            transparent,
            rgba(255, 255, 255, 0.1),
            transparent
        );
        transition: left 0.8s ease;
    }

    .flow-node:hover::after {
        left: 100%;
    }

    .flow-node:hover {
        transform: translateY(-3px);
        border-color: rgba(99, 102, 241, 0.6);
        box-shadow:
            0 8px 20px rgba(0, 0, 0, 0.25),
            0 0 0 1px rgba(255, 255, 255, 0.1) inset,
            0 0 25px rgba(99, 102, 241, 0.25);
    }

    .flow-node:hover::before {
        opacity: 0.5;
    }

    .small-node {
        min-width: 70px;
        padding: 0.9rem 0.8rem;
    }

    .node-icon {
        position: relative;
        z-index: 2;
        font-size: 1.6rem;
        margin-bottom: 0.4rem;
        filter: drop-shadow(0 1px 3px rgba(0, 0, 0, 0.4));
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .flow-node:hover .node-icon {
        transform: scale(1.1) translateY(-2px);
        filter: drop-shadow(0 2px 5px rgba(0, 0, 0, 0.6));
    }

    .small-node .node-icon {
        font-size: 1.3rem;
    }

    .node-label {
        position: relative;
        z-index: 2;
        font-size: 0.8rem;
        font-weight: 600;
        text-align: center;
        color: #f1f5f9;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
        transition: all 0.4s ease;
    }

    .flow-node:hover .node-label {
        color: #ffffff;
        transform: translateY(1px);
        text-shadow: 0 1px 3px rgba(0, 0, 0, 0.7);
    }

    /* Nodos flotantes */
    .floating-nodes {
        position: absolute;
        width: 100%;
        height: 100%;
    }

    .floating-node {
        position: absolute;

        background: rgba(255, 255, 255, 0.08) !important;
        border: 1px solid rgba(139, 92, 246, 0.2) !important;
        min-width: 50px !important;
        padding: 0.5rem !important;
        animation: float 6s ease-in-out infinite;
    }

    .floating-node .node-icon {
        font-size: 1rem !important;
    }

    .floating-node .node-label {
        font-size: 0.6rem !important;
    }

    @keyframes float {
        0%,
        100% {
            transform: translateY(0px);
        }
        50% {
            transform: translateY(-10px);
        }
    }

    /* Posicionamiento de nodos flotantes */
    .node-1 {
        top: 15%;
        left: 20%;
        animation-delay: 0s;
    }

    .node-2 {
        top: 65%;
        left: 10%;
        animation-delay: 1s;
    }

    .node-3 {
        top: 35%;
        left: 80%;
        animation-delay: 2s;
    }

    .node-4 {
        top: 85%;
        left: 70%;
        animation-delay: 3s;
    }

    .floating-node .node-icon {
        font-size: 1rem;
    }

    .floating-node .node-label {
        font-size: 0.6rem;
    }

    /* Efecto de nodo presionado mejorado */
    .flow-node.pressed {
        transform: scale(0.95);
        border-color: rgba(6, 255, 165, 0.7);
        box-shadow:
            0 0 0 1px rgba(6, 255, 165, 0.3),
            0 0 30px rgba(6, 255, 165, 0.4),
            0 0 0 4px rgba(6, 255, 165, 0.1);
        transition:
            transform 0.15s ease-out,
            box-shadow 0.15s ease-out,
            border-color 0.15s ease-out;
    }

    .flow-node.pressed::before {
        background: radial-gradient(
            circle at center,
            rgba(6, 255, 165, 0.4),
            transparent 70%
        );
        opacity: 1;
        animation: pulseGlow 0.5s ease-out;
    }

    .flow-node.pressed .node-icon {
        transform: scale(1.1);
        color: rgba(6, 255, 165, 1);
        filter: drop-shadow(0 0 10px rgba(6, 255, 165, 0.6));
        transition: all 0.15s ease-out;
    }

    @keyframes pulseGlow {
        0% {
            opacity: 0.4;
            transform: scale(0.8);
        }
        50% {
            opacity: 1;
        }
        100% {
            opacity: 0.5;
            transform: scale(1);
        }
    }

    /* Mejoras est√©ticas por tipo de nodo */
    .trigger-node,
    .notify-node {
        border-color: rgba(245, 158, 11, 0.4);
    }

    .trigger-node:hover,
    .notify-node:hover,
    .trigger-node.pressed,
    .notify-node.pressed {
        border-color: rgba(245, 158, 11, 0.7);
        box-shadow:
            0 8px 20px rgba(0, 0, 0, 0.25),
            0 0 0 1px rgba(255, 255, 255, 0.1) inset,
            0 0 25px rgba(245, 158, 11, 0.2);
    }

    .ai-node {
        border-color: rgba(6, 182, 212, 0.4);
    }

    .ai-node:hover,
    .ai-node.pressed {
        border-color: rgba(6, 182, 212, 0.7);
        box-shadow:
            0 8px 20px rgba(0, 0, 0, 0.25),
            0 0 0 1px rgba(255, 255, 255, 0.1) inset,
            0 0 25px rgba(6, 182, 212, 0.2);
    }

    .action-node {
        border-color: rgba(6, 255, 165, 0.4);
    }

    .action-node:hover,
    .action-node.pressed {
        border-color: rgba(6, 255, 165, 0.7);
        box-shadow:
            0 8px 20px rgba(0, 0, 0, 0.25),
            0 0 0 1px rgba(255, 255, 255, 0.1) inset,
            0 0 25px rgba(6, 255, 165, 0.2);
    }
</style>
