---
export interface Props {
    icon: string;
    label: string;
    id?: string;
    size?: "normal" | "small";
    className?: string;
    animateType?: string;
    animateDelay?: string;
}

const {
    icon,
    label,
    id,
    size = "normal",
    className = "",
    animateType = "scale",
    animateDelay = "0.3s",
} = Astro.props;

const sizeClass = size === "small" ? "small-node" : "";
const classes = `flow-node ${sizeClass} ${className}`.trim();
---

<div
    id={id}
    class={classes}
    data-animate={animateType}
    data-animate-delay={animateDelay}
>
    <div class="node-icon">{icon}</div>
    <span class="node-label">{label}</span>
</div>

<style>
    .flow-node {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
        padding: 1rem;
        background: rgba(255, 255, 255, 0.1);
        border: 2px solid rgba(139, 92, 246, 0.3);
        border-radius: 16px;
        backdrop-filter: blur(20px);
        min-width: 80px;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .flow-node::before {
        content: "";
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        background: linear-gradient(
            45deg,
            var(--primary),
            var(--accent),
            var(--success),
            var(--primary)
        );
        border-radius: 16px;
        opacity: 0;
        z-index: -1;
        transition: opacity 0.3s ease;
        animation: borderGlow 3s linear infinite;
    }

    @keyframes borderGlow {
        0% {
            background-position: 0% 50%;
        }
        50% {
            background-position: 100% 50%;
        }
        100% {
            background-position: 0% 50%;
        }
    }

    .flow-node:hover {
        transform: scale(1.05);
        background: rgba(255, 255, 255, 0.15);
        border-color: rgba(139, 92, 246, 0.7);
        box-shadow:
            0 0 20px rgba(139, 92, 246, 0.4),
            0 0 40px rgba(139, 92, 246, 0.2);
    }

    .flow-node:hover::before {
        opacity: 0.3;
    }

    .small-node {
        min-width: 60px;
        padding: 0.75rem;
    }

    .node-icon {
        font-size: 1.5rem;
        margin-bottom: 0.25rem;
        filter: drop-shadow(0 0 4px rgba(255, 255, 255, 0.3));
        transition: all 0.3s ease;
    }

    .flow-node:hover .node-icon {
        transform: scale(1.1);
        filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.6));
    }

    .small-node .node-icon {
        font-size: 1.2rem;
    }

    .node-label {
        font-size: 0.75rem;
        font-weight: 600;
        text-align: center;
        color: #e2e8f0;
        text-shadow: 0 0 4px rgba(0, 0, 0, 0.5);
        transition: color 0.3s ease;
    }

    .flow-node:hover .node-label {
        color: #ffffff;
        text-shadow: 0 0 8px rgba(255, 255, 255, 0.3);
    }

    /* Nodos flotantes */
    .floating-nodes {
        position: absolute;
        width: 100%;
        height: 100%;
    }

    .floating-node {
        position: absolute;

        background: rgba(255, 255, 255, 0.08) !important;
        border: 1px solid rgba(139, 92, 246, 0.2) !important;
        min-width: 50px !important;
        padding: 0.5rem !important;
        animation: float 6s ease-in-out infinite;
    }

    .floating-node .node-icon {
        font-size: 1rem !important;
    }

    .floating-node .node-label {
        font-size: 0.6rem !important;
    }

    @keyframes float {
        0%,
        100% {
            transform: translateY(0px);
        }
        50% {
            transform: translateY(-10px);
        }
    }

    /* Posicionamiento de nodos flotantes */
    .node-1 {
        top: 15%;
        left: 20%;
        animation-delay: 0s;
    }

    .node-2 {
        top: 65%;
        left: 10%;
        animation-delay: 1s;
    }

    .node-3 {
        top: 35%;
        left: 80%;
        animation-delay: 2s;
    }

    .node-4 {
        top: 85%;
        left: 70%;
        animation-delay: 3s;
    }

    .floating-node .node-icon {
        font-size: 1rem;
    }

    .floating-node .node-label {
        font-size: 0.6rem;
    }

    /* Efecto de nodo presionado */
    .flow-node.pressed {
        transform: scale(0.92);
        border-color: var(--accent);
        box-shadow:
            0 0 0 6px rgba(0, 181, 226, 0.4),
            0 0 30px rgba(0, 181, 226, 0.7);
        transition:
            transform 0.2s ease,
            box-shadow 0.2s ease,
            border-color 0.2s ease;
    }

    .flow-node.pressed::after {
        content: "";
        position: absolute;
        inset: -10px;
        border-radius: 24px;
        border: 3px solid var(--success);
        opacity: 0.9;
        animation: pressRing 0.6s ease-out forwards;
    }

    @keyframes pressRing {
        0% {
            opacity: 0.9;
            transform: scale(0.7);
            border-width: 4px;
        }
        50% {
            opacity: 0.5;
            transform: scale(1.1);
            border-width: 2px;
        }
        100% {
            opacity: 0;
            transform: scale(1.5);
            border-width: 1px;
        }
    }

    @keyframes float {
        0%,
        100% {
            transform: translateY(0px);
        }
        50% {
            transform: translateY(-10px);
        }
    }
</style>
