---
import FlowNode from "@components/shared/FlowNode.astro";
import AnimatedFlowConnections from "./AnimatedFlowConnections.jsx";
import AnimatedRunner from "./AnimatedRunner.jsx";
import RunnerBot from "./RunnerBot.astro";
import {
    Zap,
    Bot,
    Settings,
    Bell,
    Mail,
    MessageCircle,
    ChartColumn,
    Globe,
    Link,
    Smartphone,
    Target,
    ClipboardList,
} from "@lucide/astro";

export interface Props {}

const {} = Astro.props;
---

<div class="automation-flows">
    <!-- Flujo principal central -->
    <div class="flow-container main-flow">
        <FlowNode
            id="node-trigger"
            icon={Zap}
            label="Trigger"
            className="trigger-node"
            animateType="scale"
            animateDelay="0.3s"
        />

        <FlowNode
            id="node-ai"
            icon={Bot}
            label="Agente IA"
            className="ai-node"
            animateType="scale"
            animateDelay="0.9s"
        />

        <FlowNode
            id="node-action"
            icon={Settings}
            label="Acción"
            className="action-node"
            animateType="scale"
            animateDelay="1.5s"
        />

        <FlowNode
            id="node-notify"
            icon={Bell}
            label="Notificación"
            className="notify-node"
            animateType="scale"
            animateDelay="2.1s"
        />
    </div>

    <!-- Flujo secundario superior -->
    <div class="flow-container secondary-flow top-flow">
        <FlowNode
            id="node-email"
            icon={Mail}
            label="Email Marketing"
            size="small"
            className="node-6"
            animateType="fade-up"
            animateDelay="0.5s"
        />

        <FlowNode
            id="node-chat"
            icon={MessageCircle}
            label="Chat Empresarial"
            size="small"
            className="node-5"
            animateType="fade-up"
            animateDelay="0.8s"
        />
    </div>

    <!-- Flujo secundario inferior -->
    <div class="flow-container secondary-flow bottom-flow">
        <FlowNode
            id="node-crm"
            icon={ChartColumn}
            label="CRM"
            size="small"
            animateType="fade-up"
            animateDelay="0.7s"
        />
        <FlowNode
            id="node-api"
            icon={Globe}
            label="API"
            size="small"
            animateType="fade-up"
            animateDelay="1s"
        />
    </div>

    <!-- Nodos flotantes -->
    <div class="floating-nodes">
        <FlowNode
            id="node-pipeline"
            icon={Link}
            label="Pipeline"
            className="floating-node node-1"
            animateType="scale"
            animateDelay="1.8s"
        />

        <FlowNode
            id="node-whatsapp"
            icon={Smartphone}
            label="WhatsApp"
            className="floating-node node-2"
            animateType="scale"
            animateDelay="2.1s"
        />

        <FlowNode
            id="node-targeting"
            icon={Target}
            label="Targeting"
            className="floating-node node-4"
            animateType="scale"
            animateDelay="2.7s"
        />

        <FlowNode
            id="node-forms"
            icon={ClipboardList}
            label="Leads"
            className="floating-node node-3"
            animateType="scale"
            animateDelay="2.4s"
        />
    </div>

    <AnimatedFlowConnections client:load />
</div>

<!-- Mantener el RunnerBot original con su diseño bonito -->
<RunnerBot />
<AnimatedRunner client:load />

<style>
    /* Estilos base */
    :root {
        --primary: #0066ff;
        --accent: #00b5e2;
        --success: #06ffa5;
        --tertiary: #8b5cf6;
    }

    /* Flujos de automatización - estructura básica */
    .automation-flows {
        position: relative;
        width: 100%;
        height: 500px;
        pointer-events: none;
        z-index: 5;
        margin: 0 auto;
    }

    .flow-container {
        position: absolute;
        display: flex;
        align-items: center;
        gap: 3rem; /* Aumentado el gap entre nodos */
    }

    .main-flow {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        flex-direction: row;
        gap: 2.5rem; /* Aumentado el gap */
        width: 85%; /* Reducido para dar más margen */
        justify-content: space-between;
    }

    .top-flow {
        top: 10%; /* Ajustado para mejor distribución */
        right: 8%;
        flex-direction: row;
        gap: 2.5rem; /* Aumentado */
    }

    .bottom-flow {
        bottom: 10%; /* Ajustado para mejor distribución */
        left: 8%;
        flex-direction: row;
        gap: 2.5rem; /* Aumentado */
    }

    /* SVG dinámico para conexiones */
    .dynamic-connections-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 4;
        overflow: visible;
    }

    /* Estilos refinados para conexiones */
    .dynamic-connection-path {
        stroke-linecap: round;
        stroke-linejoin: round;
        fill: none;
        transition: all 0.8s ease;
    }

    /* Estilos refinados según importancia */
    .primary-path {
        stroke-dasharray: 12 4;
        animation: flowPrimary 30s linear infinite;
        opacity: 0.85;
    }

    .secondary-path {
        stroke-dasharray: 8 4;
        animation: flowSecondary 40s linear infinite;
        opacity: 0.7;
    }

    .tertiary-path {
        stroke-dasharray: 4 4;
        animation: flowTertiary 60s linear infinite;
        opacity: 0.5;
    }

    /* Estilos específicos por tipo de conexión */
    .line-path {
        stroke-dasharray: 10 4;
    }

    .curve-path {
        stroke-dasharray: 8 5;
    }

    @keyframes flowPrimary {
        to {
            stroke-dashoffset: -48;
        }
    }

    @keyframes flowSecondary {
        to {
            stroke-dashoffset: -36;
        }
    }

    @keyframes flowTertiary {
        to {
            stroke-dashoffset: -24;
        }
    }

    /* Partículas de datos mejoradas */
    .data-particle {
        filter: drop-shadow(0 0 3px currentColor);
        opacity: 0.8;
    }

    /* Transición suave al hacer hover en la zona */
    .automation-flows:hover .dynamic-connection-path.primary-path {
        opacity: 1;
        stroke-width: 1.5;
    }

    .automation-flows:hover .dynamic-connection-path.secondary-path {
        opacity: 0.9;
        stroke-width: 1;
    }

    .automation-flows:hover .data-particle {
        opacity: 1;
    }

    /* Responsive refinado */
    @media (min-width: 1200px) {
        .automation-flows {
            height: 600px;
        }

        .main-flow {
            gap: 4rem;
            width: 80%;
        }

        .top-flow,
        .bottom-flow {
            gap: 3.5rem;
        }
    }

    @media (min-width: 1440px) {
        .automation-flows {
            height: 700px;
        }

        .main-flow {
            gap: 5rem;
        }
    }

    @media (min-width: 1024px) and (max-width: 1199px) {
        .automation-flows {
            height: 550px;
        }

        .main-flow {
            gap: 3.5rem;
            width: 82%;
        }

        .top-flow,
        .bottom-flow {
            gap: 3rem;
        }
    }

    @media (max-width: 1024px) {
        .automation-flows {
            position: absolute;
            top: 0;
            right: 0;
            width: 100%;
            height: 100%;
        }

        .main-flow {
            top: 45%;
            left: 50%;
            transform: translate(-50%, -50%);
            gap: 2rem;
            width: 95%;
        }

        .top-flow {
            top: 10%;
            right: 5%;
            gap: 2rem;
        }

        .bottom-flow {
            bottom: 10%;
            left: 5%;
            gap: 2rem;
        }
    }

    @media (max-width: 768px) {
        .automation-flows {
            height: 90%;
            top: 5%;
        }

        .flow-container {
            gap: 1.5rem;
        }

        .main-flow {
            width: 95%;
            justify-content: space-around;
            gap: 0;
            padding: 0 0.5rem;
            top: 45%;
        }

        .top-flow {
            right: 3%;
            top: 15%;
            gap: 1.5rem;
        }

        .bottom-flow {
            left: 3%;
            bottom: 15%;
            gap: 1.5rem;
        }

        .floating-node {
            display: none;
        }

        .flow-node {
            padding: 0.9rem 0.8rem;
            min-width: 70px;
            transform: scale(0.9);
        }

        .small-node {
            min-width: 60px;
            padding: 0.8rem 0.7rem;
            transform: scale(0.85);
        }

        .node-icon {
            font-size: 1.5rem;
        }

        .small-node .node-icon {
            font-size: 1.2rem;
        }

        .node-label {
            font-size: 0.75rem;
            max-width: 75px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .dynamic-connection-path {
            stroke-width: 1 !important;
            opacity: 0.7;
        }

        .primary-path {
            opacity: 0.8;
            stroke-dasharray: 6 3;
        }

        .secondary-path {
            opacity: 0.6;
            stroke-dasharray: 4 3;
        }

        .tertiary-path {
            opacity: 0.5;
            stroke-dasharray: 3 3;
        }

        .data-particle {
            r: 0.6 !important;
        }

        @keyframes flowPrimary {
            to {
                stroke-dashoffset: -36;
            }
        }

        @keyframes flowSecondary {
            to {
                stroke-dashoffset: -28;
            }
        }

        @keyframes flowTertiary {
            to {
                stroke-dashoffset: -18;
            }
        }
    }

    /* Ajustes específicos para dispositivos muy pequeños */
    @media (max-width: 480px) {
        .automation-flows {
            height: 85%;
            transform: scale(0.95);
            transform-origin: center center;
        }

        .main-flow {
            flex-wrap: wrap;
            justify-content: center;
            padding-top: 1rem;
            gap: 1rem;
            width: 100%;
        }

        .top-flow {
            top: 12%;
            right: 5%;
        }

        .bottom-flow {
            left: 5%;
            bottom: 12%;
        }

        .flow-node {
            margin: 0 0.3rem 0.6rem;
            transform: scale(0.85);
        }

        .tertiary-path {
            display: none;
        }

        [filter*="glow"] {
            filter: none !important;
        }
    }

    @media (max-width: 430px) {
        .automation-flows {
            height: 80%;
            transform: scale(0.9);
        }

        .flow-node {
            transform: scale(0.8);
            min-width: 60px;
        }

        .small-node {
            min-width: 50px;
            transform: scale(0.75);
        }
    }

    @media (max-width: 390px) {
        .automation-flows {
            height: 75%;
            transform: scale(0.85);
        }

        .main-flow {
            gap: 0.8rem;
        }

        .flow-node {
            transform: scale(0.75);
            min-width: 55px;
            padding: 0.7rem 0.6rem;
        }

        .small-node {
            min-width: 45px;
            transform: scale(0.7);
        }

        .node-label {
            font-size: 0.65rem;
            max-width: 60px;
        }
    }

    @media (max-width: 360px) {
        .automation-flows {
            height: 70%;
            transform: scale(0.8);
        }

        .main-flow {
            gap: 0.6rem;
        }

        .flow-node {
            transform: scale(0.7);
            min-width: 50px;
            padding: 0.6rem 0.5rem;
        }

        .small-node {
            min-width: 40px;
            transform: scale(0.65);
        }

        .node-label {
            font-size: 0.6rem;
            max-width: 50px;
        }

        .top-flow,
        .bottom-flow {
            gap: 1rem;
        }
    }

    @media (max-width: 320px) {
        .automation-flows {
            height: 65%;
            transform: scale(0.75);
        }

        .main-flow {
            gap: 0.5rem;
            flex-wrap: wrap;
            height: 60%;
        }

        .flow-node {
            transform: scale(0.65);
            min-width: 45px;
            padding: 0.5rem 0.4rem;
        }

        .small-node {
            min-width: 35px;
            transform: scale(0.6);
        }

        .node-label {
            font-size: 0.55rem;
            max-width: 40px;
        }

        .node-icon {
            font-size: 1.2rem;
        }

        .small-node .node-icon {
            font-size: 1rem;
        }

        .top-flow,
        .bottom-flow {
            gap: 0.8rem;
        }

        .dynamic-connection-path {
            stroke-width: 0.5 !important;
        }
    }

    /* Estilos mejorados para el pressed state */
    :global(.flow-node.pressed) {
        transform: scale(0.95) !important;
        box-shadow: 0 0 20px rgba(6, 255, 165, 0.8) !important;
        transition: all 0.2s ease !important;
    }
</style>
