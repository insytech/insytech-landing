---
export interface Props {}

const {} = Astro.props;
---

<div id="runner-container">
    <div id="runner" class="runner">
        <svg
            class="bot-svg"
            viewBox="0 0 52 52"
            xmlns="http://www.w3.org/2000/svg"
        >
            <!-- Glow de fondo -->
            <circle cx="26" cy="26" r="30" fill="url(#botGlow)" opacity="0.6"
            ></circle>

            <!-- Antena superior -->
            <rect
                x="24"
                y="4"
                width="4"
                height="8"
                rx="2"
                fill="url(#antennaGrad)"></rect>

            <!-- Señales de comunicación -->
            <g class="signal-waves" opacity="0.7">
                <circle
                    cx="26"
                    cy="3"
                    r="5"
                    fill="none"
                    stroke="#00b5e2"
                    stroke-width="1"
                    opacity="0.8"
                >
                    <animate
                        attributeName="r"
                        values="3;8;3"
                        dur="2s"
                        repeatCount="indefinite"></animate>
                    <animate
                        attributeName="opacity"
                        values="0.8;0;0.8"
                        dur="2s"
                        repeatCount="indefinite"></animate>
                </circle>

                <circle
                    cx="26"
                    cy="3"
                    r="5"
                    fill="none"
                    stroke="#06ffa5"
                    stroke-width="1"
                    opacity="0.6"
                >
                    <animate
                        attributeName="r"
                        values="3;10;3"
                        dur="2.5s"
                        repeatCount="indefinite"></animate>
                    <animate
                        attributeName="opacity"
                        values="0.6;0;0.6"
                        dur="2.5s"
                        repeatCount="indefinite"></animate>
                </circle>
            </g>

            <!-- Cuerpo principal -->
            <rect
                x="12"
                y="12"
                width="28"
                height="24"
                rx="10"
                fill="url(#bodyGrad)"
                stroke="url(#strokeGrad)"
                stroke-width="2.5"></rect>

            <!-- Pantalla/visor -->
            <rect
                x="16"
                y="16"
                width="20"
                height="16"
                rx="6"
                fill="#0A1931"
                stroke="url(#screenGrad)"
                stroke-width="1"></rect>

            <!-- Ojos con animación -->
            <g class="eyes">
                <circle cx="21" cy="24" r="3.5" fill="#0A1931"></circle>
                <circle cx="31" cy="24" r="3.5" fill="#0A1931"></circle>
                <circle class="eyeL" cx="21" cy="24" r="2" fill="#06ffa5">
                    <animate
                        attributeName="opacity"
                        values="1;1;0.2;1"
                        keyTimes="0;0.8;0.85;1"
                        dur="3s"
                        repeatCount="indefinite"></animate>
                </circle>
                <circle class="eyeR" cx="31" cy="24" r="2" fill="#06ffa5">
                    <animate
                        attributeName="opacity"
                        values="1;1;0.2;1"
                        keyTimes="0;0.75;0.8;1"
                        dur="3s"
                        repeatCount="indefinite"></animate>
                </circle>
                <!-- Puntos de brillo en los ojos -->
                <circle cx="22" cy="23" r="0.8" fill="#ffffff" opacity="0.9"
                ></circle>
                <circle cx="32" cy="23" r="0.8" fill="#ffffff" opacity="0.9"
                ></circle>
            </g>

            <!-- Indicador de actividad -->
            <rect
                x="18"
                y="28"
                width="16"
                height="2"
                rx="1"
                fill="url(#activityGrad)"
            >
                <animate
                    attributeName="width"
                    values="2;16;2"
                    dur="1.8s"
                    repeatCount="indefinite"></animate>
                <animate
                    attributeName="x"
                    values="25;18;25"
                    dur="1.8s"
                    repeatCount="indefinite"></animate>
            </rect>

            <!-- Brazos/extensiones laterales -->
            <rect
                x="8"
                y="20"
                width="4"
                height="8"
                rx="2"
                fill="url(#armGrad)"
                opacity="0.8"></rect>
            <rect
                x="40"
                y="20"
                width="4"
                height="8"
                rx="2"
                fill="url(#armGrad)"
                opacity="0.8"></rect>

            <!-- Propulsores (solo visibles cuando se mueve) -->
            <g class="thruster" opacity="0">
                <ellipse
                    cx="26"
                    cy="42"
                    rx="6"
                    ry="8"
                    fill="url(#thrustGrad)"
                    opacity="0.8"
                >
                    <animate
                        attributeName="ry"
                        values="8;12;8"
                        dur="0.3s"
                        repeatCount="indefinite"></animate>
                </ellipse>
                <ellipse
                    cx="26"
                    cy="44"
                    rx="3"
                    ry="5"
                    fill="url(#thrustGrad2)"
                    opacity="0.9"
                >
                    <animate
                        attributeName="ry"
                        values="5;8;5"
                        dur="0.25s"
                        repeatCount="indefinite"></animate>
                </ellipse>
            </g>

            <!-- Definiciones de gradientes -->
            <defs>
                <radialGradient id="botGlow" cx="0.5" cy="0.5" r="0.5">
                    <stop offset="0%" stop-color="#0066ff" stop-opacity="0.8"
                    ></stop>
                    <stop offset="70%" stop-color="#00b5e2" stop-opacity="0.3"
                    ></stop>
                    <stop offset="100%" stop-color="#06ffa5" stop-opacity="0"
                    ></stop>
                </radialGradient>

                <linearGradient id="bodyGrad" x1="12" y1="12" x2="40" y2="36">
                    <stop offset="0%" stop-color="#0066ff"></stop>
                    <stop offset="50%" stop-color="#0052cc"></stop>
                    <stop offset="100%" stop-color="#00b5e2"></stop>
                </linearGradient>

                <linearGradient id="strokeGrad" x1="12" y1="12" x2="40" y2="36">
                    <stop offset="0%" stop-color="#4da6ff"></stop>
                    <stop offset="100%" stop-color="#00d4ff"></stop>
                </linearGradient>

                <linearGradient id="screenGrad" x1="16" y1="16" x2="36" y2="32">
                    <stop offset="0%" stop-color="#00b5e2" stop-opacity="0.3"
                    ></stop>
                    <stop offset="100%" stop-color="#06ffa5" stop-opacity="0.1"
                    ></stop>
                </linearGradient>

                <linearGradient id="antennaGrad" x1="26" y1="4" x2="26" y2="8">
                    <stop offset="0%" stop-color="#06ffa5"></stop>
                    <stop offset="100%" stop-color="#00b5e2"></stop>
                </linearGradient>

                <linearGradient id="thrustGrad" x1="26" y1="42" x2="26" y2="50">
                    <stop offset="0%" stop-color="#06ffa5"></stop>
                    <stop offset="50%" stop-color="#00b5e2"></stop>
                    <stop offset="100%" stop-color="#0066ff"></stop>
                </linearGradient>

                <linearGradient
                    id="thrustGrad2"
                    x1="26"
                    y1="44"
                    x2="26"
                    y2="49"
                >
                    <stop offset="0%" stop-color="#ffffff"></stop>
                    <stop offset="100%" stop-color="#06ffa5"></stop>
                </linearGradient>

                <linearGradient
                    id="activityGrad"
                    x1="18"
                    y1="28"
                    x2="34"
                    y2="30"
                >
                    <stop offset="0%" stop-color="#06ffa5"></stop>
                    <stop offset="50%" stop-color="#00b5e2"></stop>
                    <stop offset="100%" stop-color="#0066ff"></stop>
                </linearGradient>

                <linearGradient id="armGrad" x1="8" y1="20" x2="44" y2="28">
                    <stop offset="0%" stop-color="#0052cc"></stop>
                    <stop offset="100%" stop-color="#00b5e2"></stop>
                </linearGradient>
            </defs>
        </svg>

        <!-- Estado del bot MEJORADO -->
        <div class="bot-status">
            <div class="status-dot"></div>
            <span class="status-text">Procesando</span>
        </div>
    </div>
</div>

<style>
    #runner-container {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 7;
    }

    .runner {
        position: absolute;
        width: 60px;
        height: 60px;
        z-index: 10;
        pointer-events: none;
        left: 0;
        top: 0;
        opacity: 0;
        visibility: hidden;
        filter: drop-shadow(0 8px 25px rgba(0, 102, 255, 0.4));
        transform: translate(-50%, -50%);
        transition:
            opacity 0.3s ease,
            visibility 0.3s ease;
        will-change: transform, left, top;
    }

    .bot-svg {
        width: 100%;
        height: 100%;
        transform-origin: center;
        transform: rotate(var(--rotation, 0));
        backface-visibility: hidden;
        will-change: transform;
    }

    .runner.rotating .bot-svg {
        transition: none;
    }

    .runner.moving .thruster {
        opacity: 1 !important;
    }

    .runner.moving .signal-waves {
        opacity: 1 !important;
    }

    .runner.moving .eyes circle {
        animation-duration: 1s !important;
    }

    .runner.moving .bot-svg {
        animation: subtle-vibration 0.1s infinite alternate;
    }

    @keyframes subtle-vibration {
        0% {
            transform: rotate(var(--rotation, 0)) scale(1);
        }
        100% {
            transform: rotate(var(--rotation, 0)) scale(1.02);
        }
    }

    .bot-status {
        position: absolute;
        bottom: -30px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 6px;
        font-size: 11px;
        color: #00b5e2;
        font-weight: 600;
        opacity: 0;
        transition: opacity 0.3s ease;
        white-space: nowrap;
        background: rgba(0, 181, 226, 0.1);
        backdrop-filter: blur(4px);
        padding: 4px 8px;
        border-radius: 12px;
        border: 1px solid rgba(0, 181, 226, 0.2);
        min-width: 80px;
    }

    .runner.moving .bot-status {
        opacity: 1;
    }

    .status-dot {
        width: 6px;
        height: 6px;
        border-radius: 50%;
        background: #06ffa5;
        animation: pulse 1.5s infinite;
        flex-shrink: 0;
    }

    @keyframes pulse {
        0%,
        100% {
            opacity: 1;
            transform: scale(1);
        }
        50% {
            opacity: 0.7;
            transform: scale(1.1);
            box-shadow: 0 0 0 4px rgba(6, 255, 165, 0);
        }
    }

    .status-text {
        font-family:
            "Inter",
            -apple-system,
            BlinkMacSystemFont,
            sans-serif;
        letter-spacing: 0.5px;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    /* Estilos para el trail de movimiento */
    .movement-trail {
        position: absolute;
        height: 2px;
        background: linear-gradient(
            90deg,
            rgba(6, 255, 165, 0.8),
            rgba(0, 181, 226, 0.6)
        );
        opacity: 0;
        transform-origin: 0 50%;
        border-radius: 1px;
        will-change: opacity, transform;
        pointer-events: none;
        z-index: 3;
        transition: opacity 0.3s ease;
    }

    .movement-trail.active {
        opacity: 0.7;
    }

    /* Mejoras para dispositivos móviles */
    @media (max-width: 768px) {
        .runner {
            width: 50px;
            height: 50px;
            filter: drop-shadow(0 4px 15px rgba(0, 102, 255, 0.3));
        }

        .runner.moving .bot-svg {
            animation: none;
        }

        .bot-status {
            bottom: -25px;
            font-size: 9px;
            gap: 4px;
            padding: 3px 6px;
            min-width: 70px;
        }

        .status-dot {
            width: 5px;
            height: 5px;
        }
    }

    @media (max-width: 480px) {
        .runner {
            width: 45px;
            height: 45px;
        }

        .bot-status {
            bottom: -22px;
            font-size: 8px;
            gap: 3px;
            padding: 2px 5px;
            min-width: 60px;
        }

        .status-dot {
            width: 4px;
            height: 4px;
        }

        .signal-waves circle {
            animation-duration: 3s !important;
        }
    }
</style>
